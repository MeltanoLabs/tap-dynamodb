[tool.poetry]
name = "meltanolabs-tap-dynamodb"
version = "0.4.0"
description = "`tap-dynamodb` is a Singer tap for DynamoDB, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Pat Nadolny"]
keywords = [
    "ELT",
    "DynamoDB",
]
license = "Apache-2.0"
packages = [
    { include = "tap_dynamodb" },
]

[tool.poetry.dependencies]
python = ">=3.9"
boto3 = "~=1.35.35"
boto3-stubs = {extras = ["dynamodb", "sts"], version = "~=1.35.35"}
fs-s3fs = { version = "~=1.1.1", optional = true }
genson = "~=1.3.0"
orjson = "~=3.10.5"

[tool.poetry.dependencies.singer-sdk]
version = "~=0.41.0"

[tool.poetry.group.dev.dependencies]
coverage = ">=7.5.4"
moto = ">=5.0.10"
mypy = ">=1.11.2"
pytest = ">=8.2.2"

[tool.poetry.group.dev.dependencies.singer-sdk]
version="~=0.41.0"
extras = ["testing"]

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "genson.*",
]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
  "F",    # pyflakes
  "E",    # pycodestyle (errors)
  "I",    # isort
  "D",    # pydocstyle
  "UP",   # pyupgrade
  "TCH",  # flake8-type-checking
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.coverage]
source = ["tap_dynamodb/"]
omit = ["*/.tox/*", "*/test/*"]

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-dynamodb = 'tap_dynamodb.tap:TapDynamoDB.cli'

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  "ignore:datetime.datetime.utcnow:DeprecationWarning:botocore.auth", # https://github.com/boto/boto3/issues/3889
]
